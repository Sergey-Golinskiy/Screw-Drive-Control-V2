работает, отлично. теперь давай продумаем архитектуру. у меня есть 4 таких геркона, которые нужно будет отслеживать в определенный момент времени понему будет выполнятся действие, так же у меня есть  модуль реле на 8 реле, с 8 входами управления, к которым убудет подключаться котушки. давай сделаем условное обозначение

Реле 1 - R01_PIT - Питатель Винтов -  он по фактту замыкает два провода между собой и отпускает, винт полетел 
Реле 4 - R04_C2 - Распределитель для опускания/подымания цилиндра отвертки - Когда он замыкаеться отвертка един в низ, когда размыкается, автоматически вверх
Реле 5 - R05_DI4_FREE - Замыкает вход на ноль и крутиться отвертка пока замкнуто реле, размыкаем реле отвертка останавливаеться.
Реле 6 - R06_DI1_POT - Замыкаем и держим реле, Отвертка крутиться пока не достигнет нужного момента, когда момент достигнут, мы получаем ответ ОК от датчика, который будет подключен позже
Реле 7 - R07_DI5_TSK0 - Выбор нужной таски 0 (ноль) для закручивания. нужно сделать импульс на реле на 700 милисекунд
Реле 8 - R08_DI6_TSK1 - Выбор нужной таски 1 (один) для закручивания. нужно сделать импульс на реле на 700 милисекунд

Еще у нас есть датчики. Когда они замкнуты означает что сенсор сработал CLOSE, когда разомкнуты OPEN
GER_C2_UP - Сенсор крайнего положения ВЕРХ цилиндра отвертки.
GER_C2_DOWN - Сенсор крайнего положения НИЗ цилиндра отвертки (он будет аварийный) если мы достигли этого сенсора то нужно выключить R04_C2
IND_SCRW - Индуктивный сенсор для отслеживания прошел ли винт через трубку или нет.  OPEN - Винта нет, 	CLOSE - винт прошел
DO2_OK - Ответ от драйвера что винт закручен с нужным моментом. OPEN - не ок, момент еще не достигнут	CLOSE - момент достигнут
PED_START - По факту педалька, которая управляет запуском последовательности OPEN - педалька отпущена, CLOSE - педалька нажата
AREA_SENSOR - Штора безопасности, стоит на входе в рабочую зону, для того чтобы в процесе работы никто не зсунул руку. сенсор OPEN=преград нет, все ок, CLOSE=преграда, стоп выехать в рабчую зону 



Мне нужно добавить функционал. в папке с проектом будет лежать файл конфигурации, ето может быть текстовый и ямл файл, выбери сам как будет лучьше. 
Он будет содержать в себе слеующие данные:
 - Название девайса
 - Количество отверстий
 - последовательность координат - рабочие и вольные. Рабоычие то те в которых буду закручиваться винты, вольные это просто координаты для перемещения, 
    если нужно обьехать препятсвие. придумай сам как это правильно сднлать. может метками, флагами или еще чемто. 
В файле будет несколько девайсов

в веб интерфесе должно быть выпадающий список в который автоматически будут добавляться нужные девайсы из конфиг файла (тоесть отображаться "Название девайса"),выбор пользователя должен быть 
запоминаться системой и в зависимости от того какой девайс выберет пользователь будут выполняться те или иные координаты. там где рабочие координаты выполняеться цикл подачи и закручивания винты, там где вольные просто проезжаем. 
Пока не выбран девайс, кнопка Start external или педалька не должны реагировать.

Напиши что нужно добавить, убрать или изменить.подробно с обьяснениями









1. Запускается скрипт
2. Открываем сериал порт и держим открытым пока скрипт работает
2.1 Ждем пока порт откроеться  и мы получем овтет от ардуино "ok READY"
3. Отправляем в сериал команду "G28", ждем ок
4. Проверяем GER_C1_UP, если CLOSE ничего не делаем, если OPEN, включаем R02_C1_UP и ждем пока GER_C1_UP станет CLOSE.
5. Включаем R04_C2 и держим включенным пока GER_C2_DOWN не станет CLOSE
6. Выключаем R04_C2 и ждем пока GER_C2_UP станет CLOSE.
7. Ждем нажатия педальки PED_START
8. Отправляем в сериал команду "G X35 Y155 F30000", Ждем ок
9. Даем импульс (500милисикунд) на R01_PIT
10. ждем 300 милисикунд, что IND_SCRW измениться на CLOSE хотя бы импульсно, если не изменился, делаем еще раз пункт 9 
11. Включаем R06_DI1_POT
12. Включаем R04_C2 и держим включенным пока DO2_OK не станет CLOSE
13. Выключаем R04_C2 и R06_DI1_POT и ждем пока GER_C2_UP станет CLOSE.
14. Включить R05_DI4_FREE на 100 милисикунд и выключить
15. Отправляем в сериал команду "G X15 Y123 F30000", Ждем ок
16. Даем импульс (500милисикунд) на R01_PIT
17. ждем 300 милисикунд, что IND_SCRW измениться на CLOSE хотя бы импульсно, если не изменился, делаем еще раз пункт 9 
18. Включаем R06_DI1_POT
19. Включаем R04_C2 и держим включенным пока DO2_OK не станет CLOSE
20. Выключаем R04_C2 и R06_DI1_POT и ждем пока GER_C2_UP станет CLOSE.
21. Включить R05_DI4_FREE на 100 милисикунд и выключить
22. Отправляем в сериал команду "G X54 Y123 F30000", Ждем ок
23. Даем импульс (500милисикунд) на R01_PIT
24. ждем 300 милисикунд, что IND_SCRW измениться на CLOSE хотя бы импульсно, если не изменился, делаем еще раз пункт 9 
25. Включаем R06_DI1_POT
26. Включаем R04_C2 и держим включенным пока DO2_OK не станет CLOSE
27. Выключаем R04_C2 и R06_DI1_POT и ждем пока GER_C2_UP станет CLOSE.
28. Включить R05_DI4_FREE на 100 милисикунд и выключить
28.1 Отправляем в сериал команду "G X35 Y20 F30000", Ждем ок
29. Повторяем с пункта 7



Теперь делаем следующую логику.
Перед любым перемещением проверяем аларм, и в случае получения аларма с какого либо мотора, останавливаемся сразу и печатаем в сериал MOT_Y_ALARM или MOT_X_ALARM. 
Любые движения когда на одном из моторов аларм, запрещены, когда проиходит выход в нули тоже, останавливаемся и печатаем одну из указаных команд. 
Мы подключили пед по осям, тоесть теперь у нас есть обратная связь от драйвера что мотор выехал в нужную точку. теперь мы можем сделать логику, что печатаем PED_Y_IN_POS или PED_X_IN_POS, когда получили от драйвера оси по которой была задача что он в позиции.
Ответы от ардуино который она пишет в сериал
MOT_Y_OK - Мотор готов к перемещению по оси Y (печатаем один раз)
MOT_X_OK - Мотор готов к перемещению по оси X (печатаем один раз)
MOT_Y_ALARM - аларм мотора Y (печатаем один раз)
MOT_X_ALARM - аларм мотора X (печатаем один раз)
PED_Y_IN_POS - Выезд в заданую точку по Y (печатаем один раз)
PED_X_IN_POS - Выезд в заданую точку по X (печатаем один раз)
PED_Y_IN_WORK - в процесе перемещения в заданую току по Y (печатаем один раз)
PED_X_IN_WORK - в процесе перемещения в заданую току по X (печатаем один раз)
PED_Y_ERROR - Не смог выехать в заданую точку по Y (печатаем один раз)
PED_X_ERROR - Не смог выехать в заданую точку по X (печатаем один раз)

Команы которые ожидает ардуино, помимо тех что уже раньше были
MOT_Y_RESET - отключаем RELAY_Y_PIN 5 на 0,5 сек и включаем обратно, проверяем нет ли аларма по оси Y, если все ок, печатаем MOT_Y_OK, и продолжаем работу. 
MOT_X_RESET - отключаем RELAY_X_PIN 4 на 0,5 сек и включаем обратно, проверяем нет ли аларма по оси X, если все ок, печатаем MOT_X_OK, и продолжаем работу.

Я прикрепил, боевой код, он работает, тебе нужно внести все изменения таким образом чтобы все продолжило работать с новыми командами, и зависимостями, реле, алармами и педами. наиши код полностью